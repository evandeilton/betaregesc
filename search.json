[{"path":"https://evandeilton.github.io/betaroti/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 betaroti authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://evandeilton.github.io/betaroti/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Maintainer.","code":""},{"path":"https://evandeilton.github.io/betaroti/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lopes, E. J (2023). betaroti: Regressão beta para dados com resposta ordinal transformada intervalar. R package version 0.1.1, https://evandeilton.github.io/betaroti/.","code":"@Manual{,   title = {betaroti: Regressão beta para dados com resposta ordinal transformada intervalar},   author = {{Lopes} and J. E.},   year = {2023},   note = {R package version 0.1.1},   url = {https://evandeilton.github.io/betaroti/}, }"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"betaroti","dir":"","previous_headings":"","what":"Regressão Beta para Resposta Ordinal Transformada Intervalar","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Este pacote foi desenvolvido para fornecer uma biblioteca de funções em R, especialmente projetadas para ajustar modelos de regressão beta em dados com resposta ordinal transformada intervalar, tanto com dispersão fixa quanto variável. Além disso, permite realizar simulações para avaliar o desempenho dos modelos processo de estimação. Acesse o repositório oficial GitHub para visualizar o código-fonte e contribuir com o projeto. Nesta página, você encontrará informações detalhadas sobre instalação, uso e funcionamento interno das funções oferecidas pelo pacote “betaroti”. O pacote “betaroti” foi criado para facilitar modelagem e análise de dados em situações onde variável resposta é ordinal numérica, mas pode ser transformada em um intervalo contínuo, que forma um tipo de dado limitado, ex. y = (ys;yi). Nesses casos, pode haver censura à esquerda, censura à direita ou intervalar. Aplicações desse tipo de modelo encontram espaço em dados de pesquisas de opinião, avaliações de produtos, escala de dor, avaliação de reação de compostos quimicos, etc. Ao utilizar distribuição beta, o pacote permite acomodar características específicas dos dados numa estrutura que permite associar variáveis explicativas com variável resposta intervalar, através de uma estrutura de regressão covenciente e que permite o uso de preditores lineares tanto pros coeficientes relacionados com média como para aqueles relacionados com dispersão, fornecendo estimativas robustas e confiáveis dos parâmetros modelo.","code":""},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"principais-funcionalidades","dir":"","previous_headings":"","what":"Principais funcionalidades","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"O pacote “betaroti” oferece uma série de funções úteis para lidar com modelos de regressão beta e dados com resposta ordinal transformada intervalar, abrangendo cenários com dispersão fixa e variável. principais funcionalidades incluem: Ajuste de modelos de regressão beta com dispersão fixa e variável. Funções para simulação de dados, permitindo avaliação desempenho dos modelos em diferentes cenários. Estatística de bondade ajuste como AIC e BIC. Funções para ajuste e comparação de modelos com diferentes combinações de variáveis explicativas tanto para μ como ϕ. Acesse documentação detalhada de cada função e exemplos de uso neste site para obter informações sobre como utilizar o pacote “betaroti” em suas análises.","code":""},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Você pode instalar o pacote com esse comando abaixo.","code":"# install.packages(\"devtools\") devtools::install_github(\"evandeilton/betaroti\")"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"exemplos","dir":"","previous_headings":"","what":"Exemplos","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Esses são alguns exemplos de uso das funções pacote.","code":"library(betaroti)"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"simula-dados-do-modelo-beta-ordinal-com-dispersão-fixa","dir":"","previous_headings":"Exemplos","what":"Simula dados do modelo beta ordinal com dispersão fixa","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Esta função gera amostras de uma variável beta ordinal com dispersão fixa, empregando diversas funções de ligação. Neste bloco de código R, apresentamos um exemplo de como utilizar função beta_ordinal_simula_dados para simular dados de uma variável beta ordinal com dispersão fixa. Segue uma descrição detalhada processo: Criamos um conjunto de dados de exemplo com 100 observações e duas variáveis explicativas independentes (x1 e x2), geradas partir de uma distribuição normal: Em seguida, utilizamos função beta_ordinal_simula_dados para simular dados com base nos parâmetros personalizados fornecidos. função recebe os seguintes argumentos: formula: especifica relação entre variável resposta e variáveis explicativas. dados: fornece o conjunto de dados de entrada. betas: vetor de coeficientes de regressão. phi: valor parâmetro de dispersão. link: função de ligação ser utilizada (neste caso, “probit”). ncuts: número de pontos de corte para discretização da variável resposta. type: tipo de tratamento intervalo. m centraliza y ao meio. Ex. Se foi coletado o valor y = 6, transforma-se yt = 6/10 = 0.6. Assim, para tratar incerteza instrumento, sugere-se que medida anotada pode estar limitada yleft = 5.5 e yright = 6.6.","code":"# Criar um conjunto de dados de exemplo set.seed(42) dados <- data.frame(x1 = rnorm(100), x2 = rnorm(100)) dados_simulados <- beta_ordinal_simula_dados(   formula = ~ x1 + x2,   dados = dados,   betas = c(1, -0.3, 0.4),   phi = 30,   link = \"probit\",   ncuts = 100,   type = \"m\" ) dados_simulados %>%   head() %>%   knitr::kable(digits = 4, caption = \"\")"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"simula-dados-provenientes-de-um-modelo-beta-ordinal-com-dispersão-variável","dir":"","previous_headings":"Exemplos","what":"Simula dados provenientes de um modelo beta ordinal com dispersão variável.","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Neste bloco de código R, é criado um conjunto de dados simulados de um modelo beta ordinal com dispersão variável utilizando função beta_ordinal_simula_dados_z. O processo é resumido abaixo: Definir semente e tamanho da amostra, além das fórmulas para variáveis explicativas x e z. Criar um conjunto de dados de exemplo com 50 observações e quatro variáveis independentes (x1, x2, z1 e z2), geradas partir de distribuições normal e uniforme. Utilizar função beta_ordinal_simula_dados_z para gerar dados simulados com base nos parâmetros fornecidos, como fórmulas, coeficientes de regressão, funções de ligação e número de pontos de corte.","code":"# Criar um conjunto de dados de exemplo set.seed(421) n <- 50 fx <- ~ x1 + x2 fz <- ~ z1  dados <- data.frame(   x1 = rnorm(n),   x2 = rnorm(n),   z1 = runif(n),   z2 = runif(n) )  dados_simulados <- beta_ordinal_simula_dados_z(   formula_x = fx,   formula_z = fz,   dados = dados,   betas = c(0.2,-0.5, 0.3),   zetas = c(1, 1.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100,   type = \"m\" )  dados_simulados %>%    head() %>%   knitr::kable(digits = 4, caption = \"\")"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"log-verossimilhança-do-modelo-beta-ordinal-com-dispersão-fixa","dir":"","previous_headings":"Exemplos","what":"Log-verossimilhança do modelo beta ordinal com dispersão fixa","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Esta função calcula log-verossimilhança de um conjunto de dados para uma variável beta ordinal, aplicando diferentes funções de ligação. Neste bloco de código R, calculamos log-verossimilhança de um modelo beta ordinal com dispersão constante utilizando função beta_ordinal_log_vero. O processo é resumido abaixo: Definir semente e criar um conjunto de dados de exemplo com 100 observações e duas variáveis explicativas independentes (x1 e x2), geradas partir de uma distribuição normal. Definir os parâmetros modelo, incluindo coeficientes de regressão, parâmetro de dispersão e fórmula da relação entre variáveis. Utilizar função beta_ordinal_simula_dados para gerar dados simulados com base nos parâmetros fornecidos. Calcular log-verossimilhança modelo ajustado com os dados simulados usando função beta_ordinal_log_vero. Como resultado, obtemos log-verossimilhança modelo ajustado aos dados simulados, que é uma medida de quão bem o modelo se ajusta aos dados observados.","code":"# Criar um conjunto de dados de exemplo set.seed(421) dados <- data.frame(x1 = rnorm(100), x2 = rnorm(100)) # Calcular a log-verossimilhança usando a função log_vero_beta_ordinal param <- c(0, 0.5,-0.2, 50) phi <- 30 formula <- ~ x1 + x2 dados_simulados <-   beta_ordinal_simula_dados(     formula = formula,     dados = dados,     betas = c(0, 0.5,-0.2),     phi = phi,     link = \"logit\",     ncuts = 10,     type = \"m\"   ) log_verossimilhanca <-   beta_ordinal_log_vero(param, formula, dados_simulados) print(log_verossimilhanca) #> [1] -156.2426"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"log-verossimilhança-do-modelo-beta-ordinal-com-dispersão-variável","dir":"","previous_headings":"Exemplos","what":"Log-verossimilhança do modelo beta ordinal com dispersão variável","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Esta função calcula log-verossimilhança de um conjunto de dados para uma variável beta ordinal, aplicando diferentes funções de ligação tanto betas de mu como zetas de phi. Neste bloco de código R, calculamos log-verossimilhança de um modelo beta ordinal com dispersão variável utilizando função beta_ordinal_log_vero_z. O processo é resumido abaixo: Definir o tamanho da amostra e fórmulas para variáveis explicativas x e z. Criar um conjunto de dados de exemplo com 50 observações e quatro variáveis independentes (x1, x2, z1 e z2), geradas partir de distribuições normal e uniforme. Utilizar função beta_ordinal_simula_dados_z para gerar dados simulados com base nos parâmetros fornecidos, como fórmulas, coeficientes de regressão e funções de ligação. Calcular log-verossimilhança modelo ajustado com os dados simulados usando função beta_ordinal_log_vero_z. Como resultado, obtemos log-verossimilhança modelo ajustado aos dados simulados, que é uma medida de quão bem o modelo se ajusta aos dados observados caso de um modelo beta ordinal com dispersão variável.","code":"# Criar um conjunto de dados de exemplo n <- 50 fx <- ~ x1 + x2 fz <- ~ z1  dados <- data.frame(   x1 = rnorm(n),   x2 = rnorm(n),   z1 = runif(n),   z2 = runif(n) )  dados_simulados <- beta_ordinal_simula_dados_z(   formula_x = fx,   formula_z = fz,   dados = dados,   betas = c(0.2,-0.5, 0.3),   zetas = c(1, 1.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100 ) # Calcular a log-verossimilhança usando a função log_vero_beta_ordinal log_verossimilhanca <- beta_ordinal_log_vero_z(   param = c(c(0.2,-0.5, 0.3), c(1, 1.2)),   formula_x = fx,   formula_z = fz,   dados = dados_simulados,   link_x = \"logit\",   link_z = \"log\",   acumulada = TRUE ) print(log_verossimilhanca) #> [1] -212.9946"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"função-para-ajustar-um-modelo-beta-ordinal-com-dispersão-fixa","dir":"","previous_headings":"","what":"Função para ajustar um modelo beta ordinal com dispersão fixa","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"função beta_ordinal_fit realiza o ajuste de um modelo beta ordinal por meio da função optim pacote stats, retornando uma lista contendo informações essenciais ajuste realizado. Neste bloco de código R, ajustamos um modelo beta ordinal partir de um conjunto de dados simulados, utilizando funções beta_ordinal_simula_dados e beta_ordinal_fit. O processo é resumido abaixo: Definir semente, tamanho da amostra, coeficientes de regressão, fórmula da relação entre variáveis e parâmetro de dispersão. Criar um conjunto de dados de exemplo com 100 observações e três variáveis independentes (x1, x2 e x3), geradas partir de distribuições normal e binomial. Utilizar função beta_ordinal_simula_dados para gerar dados simulados com base nos parâmetros fornecidos, como fórmula, coeficientes de regressão e função de ligação. Ajustar o modelo beta ordinal aos dados simulados utilizando função beta_ordinal_fit, especificando fórmula, os dados, função de ligação e opção de cálculo da matriz hessiana numérica. Extrair os coeficientes estimados ajuste modelo usando função beta_ordinal_coef. Como resultado, obtemos os coeficientes estimados modelo beta ordinal ajustado aos dados simulados, que podem ser utilizados para análise e interpretação das relações entre variável resposta ordinal e variáveis explicativas.","code":"# Criar um conjunto de dados de exemplo set.seed(42) n <- 100 betas <- c(0.2, 0.3,-0.4, 0.1) formula <- ~ x1 + x2 + x3 phi <- 50  dados <- data.frame(   x1 = rnorm(n, mean = 1, sd = 0.5),   x2 = rbinom(n, size = 1, prob = 0.5),   x3 = rnorm(n, mean = 2, sd = 1) )  dados_simulados <- beta_ordinal_simula_dados(   formula = formula,   dados = dados,   betas = betas,   phi = phi,   link = \"logit\",   ncuts = 100 )  fit <- beta_ordinal_fit(   formula = formula,   dados = dados_simulados,   link = \"probit\",   num_hessiana = TRUE ) coe <- beta_ordinal_coef(fit)  coe$est %>%    knitr::kable(digits = 4, caption = \"\") coe$gof %>%    knitr::kable(digits = 4, caption = \"\")"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"função-para-ajustar-um-modelo-beta-ordinal-com-dispersão-variável","dir":"","previous_headings":"","what":"Função para ajustar um modelo beta ordinal com dispersão variável","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"função beta_ordinal_fit_z ajusta um modelo beta ordinal com dispersão variável, isto é, com um preditor para os betas e outro para o phi, onde covariáveis são aplicadas para explicar dispersão. função usa optim pacote stats e retorna uma lista com principais informações ajuste.","code":"n <- 50 fx <- ~ x1 + x2 fz <- ~ z1  dados <- data.frame(   x1 = rnorm(n),   x2 = rnorm(n),   z1 = runif(n),   z2 = runif(n) )  dados_simulados <- beta_ordinal_simula_dados_z(   formula_x = fx,   formula_z = fz,   dados = dados,   betas = c(0.2,-0.5, 0.3),   zetas = c(1, 1.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100 ) fit_z <- beta_ordinal_fit_z(   formula_x = fx,   formula_z = fz,   dados = dados_simulados,   link_x = \"logit\",   link_z = \"log\",   num_hessiana = TRUE ) coe <- beta_ordinal_coef(fit_z)  coe$est %>%    knitr::kable(digits = 4, caption = \"\") coe$gof %>%    knitr::kable(digits = 4, caption = \"\")"},{"path":"https://evandeilton.github.io/betaroti/index.html","id":"coleta-estatística-do-ajuste","dir":"","previous_headings":"Função para ajustar um modelo beta ordinal com dispersão variável","what":"Coleta estatística do ajuste","title":"Regressão Beta para Resposta Ordinal Transformada Intervalar","text":"Coleta estimativas e suas estatísticas para um objeto de ajuste modelo beta ordinal com censura intervalar. Coleta também estatísticas de bondade ajuste como log-verossimilhança, o AIC e o BIC modelo tanto para o modelo de dispersão fixa como aquele com dispersão variável.","code":"n <- 50 fx <- ~ x1 + x2 fz <- ~ z1  dados <- data.frame(   x1 = rnorm(n),   x2 = rnorm(n),   z1 = runif(n),   z2 = runif(n) )  dados_simulados <- beta_ordinal_simula_dados_z(   formula_x = fx,   formula_z = fz,   dados = dados,   betas = c(0.2,-0.5, 0.3),   zetas = c(1, 1.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100 ) fit_z <- beta_ordinal_fit_z(   formula_x = fx,   formula_z = fz,   dados = dados_simulados,   link_x = \"logit\",   link_z = \"log\",   num_hessiana = TRUE ) coe <- beta_ordinal_coef(fit_z)  coe$est %>%    knitr::kable(digits = 4, caption = \"\") coe$gof %>%    knitr::kable(digits = 4, caption = \"\")"},{"path":[]},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Coleta estatística do ajuste — beta_ordinal_coef","title":"Coleta estatística do ajuste — beta_ordinal_coef","text":"Coleta estimativas e suas estatísticas para um objeto de ajuste modelo beta ordinal com censura intervalar. Coleta também estatísticas de bondade ajuste como log-verossimilhança, o AIC e o BIC modelo","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coleta estatística do ajuste — beta_ordinal_coef","text":"","code":"beta_ordinal_coef(fit)"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coleta estatística do ajuste — beta_ordinal_coef","text":"fit Objeto sjuste retornado das funções beta_ordinal_fit e beta_ordinal_fit_z","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coleta estatística do ajuste — beta_ordinal_coef","text":"Lista contendo estimativas coeficientes, suas estatísticas e bondade ajuste.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coleta estatística do ajuste — beta_ordinal_coef","text":"","code":"# Simulando dados n <- 50 fx <- ~ x1 + x2 fz <- ~ z1 dados <- data.frame(   x1 = rnorm(n),   x2 = rnorm(n),   z1 = runif(n),   z2 = runif(n)  )  dados_simulados <- beta_ordinal_simula_dados_z(    formula_x = fx,    formula_z = fz,    dados = dados,    betas = c(0.2,-0.5, 0.3),    zetas = c(1, 1.2),    link_x = \"logit\",    link_z = \"log\",    ncuts = 100    )   fit_z <- beta_ordinal_fit_z(   formula_x = fx,   formula_z = fz,   dados = dados_simulados,   link_x = \"logit\",   link_z = \"log\",   num_hessiana = TRUE   )  coe <- beta_ordinal_coef(fit_z) coe$est #>            variable    estimate   ci_lower   ci_upper        se      t_value #> 1       (Intercept)  0.37725138  0.1594489  0.5950538 0.1111257  3.394815176 #> 2                x1 -0.66473900 -0.8937426 -0.4357354 0.1168407 -5.689274320 #> 3                x2  0.37861431  0.1617313  0.5954974 0.1106566  3.421523372 #> 4 (phi)_(Intercept)  1.84915485  1.0013555  2.6969542 0.4325586  4.274923184 #> 5          (phi)_z1  0.00633686 -1.4526990  1.4653727 0.7444197  0.008512482 #>        p_value #> 1 1.443375e-03 #> 2 9.010940e-07 #> 3 1.335575e-03 #> 4 9.811660e-05 #> 5 9.932457e-01 coe$gof #>   log_likelihood       AIC       BIC #> 1       207.2316 -402.4633 -390.9911"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","text":"função fit_beta_ordinal ajusta um modelo beta ordinal usando função optim pacote stats, retornando uma tabela com estatísticas sumarizadas ajuste, incluindo intervalos de confiança e cálculo BIAS.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","text":"","code":"beta_ordinal_fit(formula, dados, link = \"logit\", num_hessiana = TRUE)"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","text":"formula Fórmula para expressar relação das preditoras X1, X2, Xn. Ela deve ser referenciada em Y. Ex. formula = ~X1 + X2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. dados Um conjunto de dados que contém variável dependente e variáveis independentes especificadas na fórmula. link Nome da função de ligação ser usada. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\". O padrão é \"logit\". num_hessiana Se TRUE, calcula matriz Hessian numericamente com o pacote numDeriv. Se FALSE, calcula com o padrão da optim","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","text":"Retorna uma lista contendo o resultado da otimização e uma tabela com estatísticas sumarizadas ajuste.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit","text":"","code":"# Criar um conjunto de dados de exemplo set.seed(42) n <- 100 dados <- data.frame(   x1 = rnorm(n, mean = 1, sd = 0.5),   x2 = rbinom(n, size = 1, prob = 0.5),   x3 = rnorm(n, mean = 2, sd = 1)) betas <- c(0.2, 0.3, -0.4, 0.1) formula <- ~x1 + x2 + x3 phi <- 50 dados_simulados <- beta_ordinal_simula_dados(   formula = formula,   dados = dados,   betas = betas,   phi = phi,   link = \"logit\",   ncuts = 100) fit <- beta_ordinal_fit(  formula = formula,  dados = dados_simulados,  link = \"probit\",  num_hessiana = TRUE) coe <- beta_ordinal_coef(fit) coe$est #>      variable   estimate    ci_lower   ci_upper         se   t_value #> 1 (Intercept)  0.2155522  0.03528974  0.3958147 0.09197234  2.343663 #> 2          x1  0.3066623  0.19648136  0.4168432 0.05621579  5.455092 #> 3          x2 -0.4557598 -0.57338849 -0.3381311 0.06001573 -7.594006 #> 4          x3  0.1003187  0.03761526  0.1630221 0.03199214  3.135730 #> 5       (phi) 51.1295630 36.76727095 65.4918551 7.32783468  6.977445 #>        p_value #> 1 2.117981e-02 #> 2 3.876972e-07 #> 3 2.137781e-11 #> 4 2.281775e-03 #> 5 4.012973e-10"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","text":"função fit_beta_ordinal ajusta um modelo beta ordinal usando função optim pacote stats, retornando uma tabela com estatísticas sumarizadas ajuste, incluindo intervalos de confiança e cálculo BIAS.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","text":"","code":"beta_ordinal_fit_z(   formula_x,   formula_z,   dados,   link_x = \"logit\",   link_z = \"log\",   num_hessiana = TRUE )"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","text":"formula_x Fórmula para expressar relação das preditoras X1, X2, Xn relacionadas com os betas. Ela deve ser referenciada em Y. Ex. formula = ~X1 + X2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. formula_z Fórmula para expressar relação das preditoras Z1, Z2, Zn relacionadas com os phi's modelo se regressão beta com preditoas em phi. Ela deve ser referenciada em Y. Ex. formula = ~Z1 + Z2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. dados Um conjunto de dados que contém variável dependente e variáveis independentes especificadas na fórmula. link_x Nome da função de ligação ser usada para preditoras X1, X2, ..., Xn. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\". O padrão é \"logit\". link_z Nome da função de ligação ser usada para preditoras Z1, Z2, ..., Zn relacionadas com phi. Pode ser uma das seguintes: \"log\", \"sqrt e \"identity\". O padrão é \"log\". num_hessiana Se TRUE, calcula matriz Hessian numericamente com o pacote numDeriv. Se FALSE, calcula com o padrão da optim","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","text":"Retorna uma lista contendo o resultado da otimização e uma tabela com estatísticas sumarizadas ajuste.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_fit_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Função para ajustar um modelo beta ordinal — beta_ordinal_fit_z","text":"","code":"n <- 50 dados <- data.frame(x1 = rnorm(n), x2 = rnorm(n),                     z1 = runif(n), z2 = runif(n)) fx <- ~ x1 + x2 fz <- ~ z1 dados_simulados <- beta_ordinal_simula_dados_z( formula_x = fx, formula_z = fz, dados = dados, betas = c(0.2, -0.5, 0.3), zetas = c(1, 1.2), link_x = \"logit\", link_z = \"log\", ncuts = 100) fit_z <- beta_ordinal_fit_z( formula_x = fx, formula_z = fz, dados = dados_simulados, link_x = \"logit\", link_z = \"log\", num_hessiana = TRUE) beta_ordinal_coef(fit_z)$est #>            variable   estimate    ci_lower   ci_upper        se    t_value #> 1       (Intercept)  0.1224674 -0.13836049  0.3832953 0.1330779  0.9202685 #> 2                x1 -0.3995244 -0.68691153 -0.1121373 0.1466288 -2.7247338 #> 3                x2  0.3626204  0.09534555  0.6298952 0.1363672  2.6591463 #> 4 (phi)_(Intercept)  0.5855119 -0.20181751  1.3728412 0.4017060  1.4575630 #> 5          (phi)_z1  1.3096649 -0.09961816  2.7189479 0.7190352  1.8214198 #>       p_value #> 1 0.362339680 #> 2 0.009132205 #> 3 0.010812171 #> 4 0.151904816 #> 5 0.075194716"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","title":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","text":"Esta função calcula log-verossimilhança de um conjunto de dados para uma variável beta ordinal, aplicando diferentes funções de ligação.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","text":"","code":"beta_ordinal_log_vero(param, formula, dados, link = \"logit\", acumulada = TRUE)"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","text":"param Vetor numérico de parâmetros, incluindo coeficientes de regressão e o parâmetro phi. formula Fórmula que indica relação entre variável dependente e variáveis independentes. dados Um conjunto de dados que contém variável dependente e variáveis independentes especificadas na fórmula. link Nome da função de ligação ser usada. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\". O padrão é \"logit\". acumulada Um valor lógico indicando se log-verossimilhança acumulada deve ser calculada. O padrão é TRUE.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","text":"Retorna soma da log-verossimilhança dos dados.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-verossimilhança do modelo beta ordinal com dispersão fixa — beta_ordinal_log_vero","text":"","code":"# Criar um conjunto de dados de exemplo set.seed(421) dados <- data.frame(x1 = rnorm(100), x2 = rnorm(100)) # Calcular a log-verossimilhança usando a função log_vero_beta_ordinal param <- c(0, 0.5, -0.2, 50) phi <- 30 formula <- ~x1 + x2 dados_simulados <- beta_ordinal_simula_dados(formula = formula, dados = dados, betas = c(0, 0.5, -0.2), phi = phi, link = \"logit\", ncuts = 10, type = \"m\") log_verossimilhanca <- beta_ordinal_log_vero(param, formula, dados_simulados) print(log_verossimilhanca) #> [1] -156.2426"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","title":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","text":"Esta função calcula log-verossimilhança de um conjunto de dados para uma variável beta ordinal, aplicando diferentes funções de ligação tanto betas de mu como zetas de phi.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","text":"","code":"beta_ordinal_log_vero_z(   param,   formula_x = ~x1 + x2,   formula_z = ~z1 + z2,   dados,   link_x = \"logit\",   link_z = \"log\",   acumulada = TRUE )"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","text":"param Vetor numérico de parâmetros, incluindo coeficientes de regressão e o parâmetro phi. formula_x Fórmula para expressar relação das preditoras X1, X2, Xn relacionadas com os betas. Ela deve ser referenciada em Y. Ex. formula = ~X1 + X2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. formula_z Fórmula para expressar relação das preditoras Z1, Z2, Zn relacionadas com os phi's modelo se regressão beta com preditoas em phi. Ela deve ser referenciada em Y. Ex. formula = ~Z1 + Z2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. dados Um conjunto de dados que contém variável dependente e variáveis independentes especificadas na fórmula. link_x Nome da função de ligação ser usada para preditoras X1, X2, ..., Xn. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\". O padrão é \"logit\". link_z Nome da função de ligação ser usada para preditoras Z1, Z2, ..., Zn  relacionadas com phi. Pode ser uma das seguintes: \"log\", \"sqrt e \"identity\". O padrão é \"log\". acumulada Um valor lógico indicando se log-verossimilhança acumulada deve ser calculada. O padrão é TRUE.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","text":"Retorna soma da log-verossimilhança dos dados.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_log_vero_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-verossimilhança do modelo beta ordinal com dispersão variável — beta_ordinal_log_vero_z","text":"","code":"# Criar um conjunto de dados de exemplo n <- 50 dados <- data.frame(x1 = rnorm(n), x2 = rnorm(n),                     z1 = runif(n), z2 = runif(n)) fx <- ~ x1 + x2 fz <- ~ z1 dados_simulados <- beta_ordinal_simula_dados_z(   formula_x = fx,   formula_z = fz,   dados = dados,   betas = c(0.2, -0.5, 0.3),   zetas = c(1, 1.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100) # Calcular a log-verossimilhança usando a função log_vero_beta_ordinal log_verossimilhanca <- beta_ordinal_log_vero_z(   param = c( c(0.2, -0.5, 0.3), c(1, 1.2)),   formula_x = fx,   formula_z = fz,   dados = dados_simulados,   link_x = \"logit\",   link_z = \"log\",   acumulada = TRUE)   print(log_verossimilhanca) #> [1] -212.9946"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados.html","id":null,"dir":"Reference","previous_headings":"","what":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","title":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","text":"Esta função simula dados de uma variável beta ordinal com dispersão fixa, aplicando diferentes funções de ligação.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","text":"","code":"beta_ordinal_simula_dados(   formula,   dados,   betas,   phi = 50,   link = \"logit\",   ncuts = 100,   type = \"m\" )"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","text":"formula Fórmula que indica relação entre variável dependente e variáveis independentes. O padrão é ~x1 + x2. dados Um conjunto de dados que contém variáveis independentes especificadas na fórmula. betas Vetor numérico de coeficientes de regressão. O padrão é c(0, 0.5, -0.2). phi Parâmetro positivo que controla dispersão da distribuição beta. O padrão é 50. link Nome da função de ligação ser usada. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\". O padrão é \"logit\". ncuts Número de cortes para variável ordinal. O padrão é 100. type Tipo de intervalo. \"m\" = meio; \"l\" = esquerda e \"r\" = direita.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","text":"Retorna um data.frame contendo os dados simulados da variável  beta ordinal e variáveis independentes.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simula dados do modelo beta ordinal com dispersão fixa — beta_ordinal_simula_dados","text":"","code":"# Criar um conjunto de dados de exemplo set.seed(42) dados <- data.frame(x1 = rnorm(100), x2 = rnorm(100))  # Simular dados usando a função beta_ordinal_simula_dados com parâmetros personalizados dados_simulados <- beta_ordinal_simula_dados(  formula = ~x1 + x2, dados = dados,  betas = c(1, -0.3, 0.4), phi = 30,  link = \"probit\", ncuts = 100, type = \"m\") head(dados_simulados) #>           y yr  left right         x1         x2 #> 1 0.9622777 96 0.955 0.965  1.3709584  1.2009654 #> 2 0.9220555 92 0.915 0.925 -0.5646982  1.0447511 #> 3 0.5581486 56 0.555 0.565  0.3631284 -1.0032086 #> 4 0.9855556 99 0.985 0.995  0.6328626  1.8484819 #> 5 0.8270294 83 0.825 0.835  0.4042683 -0.6667734 #> 6 0.9044429 90 0.895 0.905 -0.1061245  0.1055138"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","title":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","text":"Esta função simula dados de uma variável beta ordinal, aplicando diferentes funções de ligação tanto para betas como para zetas de phi","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","text":"","code":"beta_ordinal_simula_dados_z(   formula_x = ~x1 + x2,   formula_z = ~z1 + z2,   dados,   betas = c(0, 0.5, -0.2),   zetas = c(1, 0.5, 0.2),   link_x = \"logit\",   link_z = \"log\",   ncuts = 100,   type = \"m\" )"},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","text":"formula_x Fórmula para expressar relação das preditoras X1, X2, Xn relacionadas com os betas. Ela deve ser referenciada em Y. Ex. formula = ~X1 + X2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. formula_z Fórmula para expressar relação das preditoras Z1, Z2, Zn relacionadas com os phi's modelo se regressão beta com preditoas em phi. Ela deve ser referenciada em Y. Ex. formula = ~Z1 + Z2. Isso porque variável resposta é intervalar. Veja os detalhes para mais informação. dados Um conjunto de dados que contém variável dependente e variáveis independentes especificadas nas fórmulas. betas Vetor de betas associados aos preditores de X utilizados para simular da beta. zetas Vetor de zetas associados aos preditores de Z utilizados para simular da beta com dispersão variável. link_x Nome da função de ligação ser usada para preditoras X1, X2, ..., Xn. Pode ser uma das seguintes: \"logit\", \"probit\", \"cauchit\", \"cloglog\" ou \"identity\".  O padrão é \"logit\". link_z Nome da função de ligação ser usada para preditoras Z1, Z2, ..., Zn relacionadas com phi. Pode ser uma das seguintes: \"log\", \"sqrt e \"identity\". O padrão é \"log\". ncuts Número de cortes para variável ordinal. O padrão é 100. type Tipo de intervalo. \"m\" = meio; \"l\" = esquerda e \"r\" = direita.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","text":"Retorna um data.frame contendo os dados simulados da variável beta ordinal e variáveis independentes.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/beta_ordinal_simula_dados_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simula dados do modelo beta ordinal com dispersão variável — beta_ordinal_simula_dados_z","text":"","code":"# Criar um conjunto de dados de exemplo set.seed(421) n <- 50 dados <- data.frame( x1 = rnorm(n), x2 = rnorm(n), z1 = runif(n), z2 = runif(n)) fx <- ~ x1 + x2 fz <- ~ z1 dados_simulados <- beta_ordinal_simula_dados_z( formula_x = fx, formula_z = fz, dados = dados, betas = c(0.2, -0.5, 0.3), zetas = c(1, 1.2), link_x = \"logit\", link_z = \"log\", ncuts = 100, type = \"m\")"},{"path":"https://evandeilton.github.io/betaroti/reference/fn_switch_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Seleção das funções de ligação inversas — fn_switch_link","title":"Seleção das funções de ligação inversas — fn_switch_link","text":"Função para escolher e aplicar funções de ligação inversas aos preditores de X e Z","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/fn_switch_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seleção das funções de ligação inversas — fn_switch_link","text":"","code":"fn_switch_link(eta, link)"},{"path":"https://evandeilton.github.io/betaroti/reference/fn_switch_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seleção das funções de ligação inversas — fn_switch_link","text":"eta Preditor linear dado por X*param. link Função de ligação escolhida.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/fn_switch_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seleção das funções de ligação inversas — fn_switch_link","text":"Valor de mu, resultante da aplicação da transformação inversa em eta.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://evandeilton.github.io/betaroti/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://evandeilton.github.io/betaroti/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""}]
